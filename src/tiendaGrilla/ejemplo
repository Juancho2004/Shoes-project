import React, { useState, useEffect } from 'react';

const InfiniteScroll = () => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);
  const [page, setPage] = useState(1);
  const [totalPages, setTotalPages] = useState(1);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await fetch(/zapatillas?page=${page});
        const newData = await response.json();

        setData((prevData) => [...prevData, ...newData.zapatillas]);
        setTotalPages(newData.total_pages);
        setLoading(false);
      } catch (error) {
        console.error('Error fetching data:', error);
      }
    };

    fetchData();
  }, [page]);

  const handleScroll = () => {
    if (
      window.innerHeight + document.documentElement.scrollTop ===
      document.documentElement.offsetHeight
    ) {
      if (page < totalPages) {
        setPage((prevPage) => prevPage + 1);
      }
    }
  };

  useEffect(() => {
    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [page, totalPages]);

  return (
    <div>
      {data.map((item, index) => (
        <div key={index}>{/* Renderiza los elementos de datos aqu√≠ */}</div>
      ))}
      {loading && <p>Cargando...</p>}
    </div>
  );
};

export default InfiniteScroll;





    useEffect(() => {
        console.log('hola')
        
    },[]);